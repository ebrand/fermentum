# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name www.fermentum.dev fermentum.dev;

    # Let's Encrypt ACME challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS - Main User Interface
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.fermentum.dev fermentum.dev;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/www.fermentum.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/www.fermentum.dev/privkey.pem;

    # SSL security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Root location - User UI
    location / {
        proxy_pass http://ui-user:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # WebSocket support for SignalR
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # Timeouts for long-polling
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTPS - Admin Interface
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.fermentum.dev;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/www.fermentum.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/www.fermentum.dev/privkey.pem;

    # SSL security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Root location - Admin UI
    location / {
        proxy_pass http://ui-admin:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS - API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.fermentum.dev;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/www.fermentum.dev/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/www.fermentum.dev/privkey.pem;

    # SSL security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;

    # API location
    location / {
        proxy_pass http://fermentum-api:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # CORS headers (handled by API, but can be overridden here if needed)
        # add_header Access-Control-Allow-Origin * always;

        # WebSocket support for SignalR hubs
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # Increased timeouts for long-running operations
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
}
