[build]
builder = "DOCKERFILE"

[build.args]
ASPNETCORE_ENVIRONMENT = "${{ASPNETCORE_ENVIRONMENT}}"
ASPNETCORE_URLS = "${{ASPNETCORE_URLS}}"
ConnectionStrings__DefaultConnection = "${{ConnectionStrings__DefaultConnection}}"
ConnectionStrings__Redis = "${{ConnectionStrings__Redis}}"
Stytch__ProjectId = "${{Stytch__ProjectId}}"
Stytch__ProjectSecret = "${{Stytch__ProjectSecret}}"
Stytch__PublicToken = "${{Stytch__PublicToken}}"
Jwt__Issuer = "${{Jwt__Issuer}}"
Jwt__Audience = "${{Jwt__Audience}}"
Jwt__SecretKey = "${{Jwt__SecretKey}}"
Jwt__ExpiryMinutes = "${{Jwt__ExpiryMinutes}}"
Stripe__SecretKey = "${{Stripe__SecretKey}}"
Stripe__PublishableKey = "${{Stripe__PublishableKey}}"
QuickBooksOnline__ClientId = "${{QuickBooksOnline__ClientId}}"
QuickBooksOnline__ClientSecret = "${{QuickBooksOnline__ClientSecret}}"
QuickBooksOnline__Environment = "${{QuickBooksOnline__Environment}}"
QuickBooksOnline__RedirectUri = "${{QuickBooksOnline__RedirectUri}}"

[deploy]
numReplicas = 1
sleepApplication = false
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

[variables]
# NOTE: All environment variables must be set in Railway dashboard
# They are referenced in [build.args] using ${{VARIABLE_NAME}} syntax
# and injected into Docker container via ARG/ENV declarations
# This bypasses Railway's runtime variable system which was not working
#
# Required variables (set these in Railway dashboard):
#   ASPNETCORE_ENVIRONMENT = "Production"
#   ASPNETCORE_URLS = "http://+:8080"
#   ConnectionStrings__DefaultConnection = "Host=postgres.railway.internal;..."
#   ConnectionStrings__Redis = "redis.railway.internal:6379,password=..."
#   Stytch__ProjectId, Stytch__ProjectSecret, Stytch__PublicToken
#   Jwt__Issuer, Jwt__Audience, Jwt__SecretKey, Jwt__ExpiryMinutes
#   Stripe__SecretKey, Stripe__PublishableKey
#   QuickBooksOnline__ClientId, QuickBooksOnline__ClientSecret,
#   QuickBooksOnline__Environment, QuickBooksOnline__RedirectUri